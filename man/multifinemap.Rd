% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multifinemap.R
\name{multifinemap}
\alias{multifinemap}
\title{Multi-fine-map}
\usage{
multifinemap(
  dat,
  locus_dir,
  fullSS_path = NULL,
  finemap_methods = c("ABF", "SUSIE", "FINEMAP"),
  finemap_args = NULL,
  dataset_type = "GWAS",
  force_new_finemap = FALSE,
  LD_reference = NULL,
  LD_matrix = NULL,
  n_causal = 5,
  compute_n = "ldsc",
  standardise_headers = FALSE,
  conditioned_snps = NULL,
  PAINTOR_QTL_datasets = NULL,
  PP_threshold = 0.95,
  consensus_threshold = 2,
  case_control = TRUE,
  priors_col = NULL,
  conda_env = "echoR_mini",
  nThread = 1,
  seed = 2022,
  verbose = TRUE
)
}
\arguments{
\item{dat}{Fine-mapping results data.}

\item{compute_n}{How to compute per-SNP sample size (new column "N").
\itemize{
\item{\code{0}: }{N will not be computed.}
\item{\code{>0}: }{If any number >0 is provided,
that value will be set as N for every row.
\strong{Note}: Computing N this way is incorrect and should be avoided
if at all possible.}
\item{\code{"sum"}: }{N will be computed as:
cases (N_CAS) + controls (N_CON), so long as both columns are present}.
\item{\code{"effective"}: }{N will be computed as effective sample size:
cases (N_CAS) + controls (N_CON), so long as both columns are present}.
}}

\item{standardise_headers}{Standardise headers first.}

\item{priors_col}{[Optional] Name of the a column in 
\code{dat} to extract SNP-wise prior probabilities from.}

\item{verbose}{Print messages.}
}
\description{
Handle fine-mapping across multiple tools.
}
\examples{
dat <- echofinemap::drop_finemap_cols(dat = echodata::BST1)
LD_matrix <- echodata::BST1_LD_matrix
locus_dir <- file.path(tempdir(),echodata::locus_dir) 

dat2 <- echofinemap::multifinemap(dat = dat, 
                                 locus_dir = locus_dir,
                                 LD_matrix = LD_matrix)
}
\seealso{
Other finemapping functions: 
\code{\link{create_method_path}()},
\code{\link{multifinemap_handler_method}()},
\code{\link{multifinemap_handler}()}
}
\concept{finemapping functions}
