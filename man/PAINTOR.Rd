% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PAINTOR.R
\name{PAINTOR}
\alias{PAINTOR}
\title{Run full PAINTOR pipeline}
\source{
\href{https://github.com/gkichaev/PAINTOR_V3.0}{GitHub}
\href{https://github.com/gkichaev/PAINTOR_V3.0/wiki/2a.-Computing-1000-genomes-LD}{LD Tutorial}
}
\usage{
PAINTOR(
  dat,
  LD_matrix,
  locus_dir,
  annot = NULL,
  zscore_col = "ZSCORE",
  tstat_col = "tstat",
  max_causal = 1,
  use_annotations = FALSE,
  annot_xgr = NULL,
  annot_roadmap = NULL,
  chrom_states = NULL,
  credset_thresh = 0.95,
  dat_populations = "EUR",
  LD_reference = "1KGphase3",
  force_new_LD = FALSE,
  method = c("mcmc", "enumerate"),
  set_seed = 2019,
  paintor_path = NULL,
  force_reinstall = FALSE,
  conda_env = "echoR_mini",
  nThread = 1,
  verbose = TRUE
)
}
\arguments{
\item{dat}{A \link[data.table]{data.table} of GWAS/QTL/TWAS 
summary statistics. Alternatively, for multi-trait/multi-ancestry
 fine-mapping you can instead provide a named list of 
 \link[data.table]{data.table}s with overlapping genomic coordinates 
 (e.g. \code{list(GWAS1=dat1, GWAS2=dat2)}).}

\item{method}{\code{"enumerate"} is actually faster 
when \code{max_causal} is small (<3), 
but far larger \code{max_causal} use \code{"mcmc"}.}
}
\description{
Run full PAINTOR pipeline
}
\examples{
 
dat <- echodata::BST1
## For example only; 
## normally you need to compute ZSCORE using the 
## full genome-wide summary stats.
dat[,ZSCORE:=(-log10(P))]
LD_matrix <- echodata::BST1_LD_matrix  
locus_dir <- file.path(tempdir(),echodata::locus_dir)
dat2 <- PAINTOR(dat = dat,
                locus_dir = locus_dir,
                LD_matrix = LD_matrix,
                max_causal = 2,
                method = "enumerate") 
}
